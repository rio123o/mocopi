//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/SceneTransitionInputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SceneTransitionInputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SceneTransitionInputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SceneTransitionInputSystem"",
    ""maps"": [
        {
            ""name"": ""UI"",
            ""id"": ""7b63f246-05b9-4710-8944-d162210da8c6"",
            ""actions"": [
                {
                    ""name"": ""push"",
                    ""type"": ""Button"",
                    ""id"": ""79bd502e-279f-428f-b371-454cf7ebae55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rest"",
                    ""type"": ""Button"",
                    ""id"": ""b748fe2d-9606-43f8-95a2-07c18704b89c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BackD"",
                    ""type"": ""Button"",
                    ""id"": ""eec64ba6-1c12-438d-b0e6-2135d1237769"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BackG"",
                    ""type"": ""Button"",
                    ""id"": ""8a61d98e-7ee7-4641-b431-70912aa6a902"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""9fe84655-2e69-44a4-a85f-6e5dd7e4570a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""65c205ee-afe7-4327-bf09-19bca9f16085"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoEnd"",
                    ""type"": ""Button"",
                    ""id"": ""22bfa2c1-d531-4ff1-bc04-1ad68064adbb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dbd481fd-c99c-4b98-8352-6c89f2931a32"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cc93444-e641-4c9e-982e-a300a7b15766"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce5fe935-c72f-4acd-b832-1566cee806c7"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6be6f233-bd08-4a11-af33-b0d19c8566f7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5c0d198-ce2e-4e0c-941c-a7e6e28b4c4c"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e573032-ed30-4969-8baa-6548a088c6e0"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26eef342-40af-4b26-a09b-95dc25628fc4"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84ae0a81-831f-4475-949a-77637e3440e6"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_push = m_UI.FindAction("push", throwIfNotFound: true);
        m_UI_Rest = m_UI.FindAction("Rest", throwIfNotFound: true);
        m_UI_BackD = m_UI.FindAction("BackD", throwIfNotFound: true);
        m_UI_BackG = m_UI.FindAction("BackG", throwIfNotFound: true);
        m_UI_Return = m_UI.FindAction("Return", throwIfNotFound: true);
        m_UI_Next = m_UI.FindAction("Next", throwIfNotFound: true);
        m_UI_GoEnd = m_UI.FindAction("GoEnd", throwIfNotFound: true);
    }

    ~@SceneTransitionInputSystem()
    {
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, SceneTransitionInputSystem.UI.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_push;
    private readonly InputAction m_UI_Rest;
    private readonly InputAction m_UI_BackD;
    private readonly InputAction m_UI_BackG;
    private readonly InputAction m_UI_Return;
    private readonly InputAction m_UI_Next;
    private readonly InputAction m_UI_GoEnd;
    public struct UIActions
    {
        private @SceneTransitionInputSystem m_Wrapper;
        public UIActions(@SceneTransitionInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @push => m_Wrapper.m_UI_push;
        public InputAction @Rest => m_Wrapper.m_UI_Rest;
        public InputAction @BackD => m_Wrapper.m_UI_BackD;
        public InputAction @BackG => m_Wrapper.m_UI_BackG;
        public InputAction @Return => m_Wrapper.m_UI_Return;
        public InputAction @Next => m_Wrapper.m_UI_Next;
        public InputAction @GoEnd => m_Wrapper.m_UI_GoEnd;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @push.started += instance.OnPush;
            @push.performed += instance.OnPush;
            @push.canceled += instance.OnPush;
            @Rest.started += instance.OnRest;
            @Rest.performed += instance.OnRest;
            @Rest.canceled += instance.OnRest;
            @BackD.started += instance.OnBackD;
            @BackD.performed += instance.OnBackD;
            @BackD.canceled += instance.OnBackD;
            @BackG.started += instance.OnBackG;
            @BackG.performed += instance.OnBackG;
            @BackG.canceled += instance.OnBackG;
            @Return.started += instance.OnReturn;
            @Return.performed += instance.OnReturn;
            @Return.canceled += instance.OnReturn;
            @Next.started += instance.OnNext;
            @Next.performed += instance.OnNext;
            @Next.canceled += instance.OnNext;
            @GoEnd.started += instance.OnGoEnd;
            @GoEnd.performed += instance.OnGoEnd;
            @GoEnd.canceled += instance.OnGoEnd;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @push.started -= instance.OnPush;
            @push.performed -= instance.OnPush;
            @push.canceled -= instance.OnPush;
            @Rest.started -= instance.OnRest;
            @Rest.performed -= instance.OnRest;
            @Rest.canceled -= instance.OnRest;
            @BackD.started -= instance.OnBackD;
            @BackD.performed -= instance.OnBackD;
            @BackD.canceled -= instance.OnBackD;
            @BackG.started -= instance.OnBackG;
            @BackG.performed -= instance.OnBackG;
            @BackG.canceled -= instance.OnBackG;
            @Return.started -= instance.OnReturn;
            @Return.performed -= instance.OnReturn;
            @Return.canceled -= instance.OnReturn;
            @Next.started -= instance.OnNext;
            @Next.performed -= instance.OnNext;
            @Next.canceled -= instance.OnNext;
            @GoEnd.started -= instance.OnGoEnd;
            @GoEnd.performed -= instance.OnGoEnd;
            @GoEnd.canceled -= instance.OnGoEnd;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IUIActions
    {
        void OnPush(InputAction.CallbackContext context);
        void OnRest(InputAction.CallbackContext context);
        void OnBackD(InputAction.CallbackContext context);
        void OnBackG(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnNext(InputAction.CallbackContext context);
        void OnGoEnd(InputAction.CallbackContext context);
    }
}
